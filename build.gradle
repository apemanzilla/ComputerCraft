
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

// Compile for Java 6
sourceCompatibility = 1.6
targetCompatibility = 1.6

// Make Eclipse recognize project as Gradle project
eclipse.project {
    natures 'org.eclipse.buildship.core.gradleprojectnature'
    natures 'org.springsource.ide.eclipse.gradle.core.nature'
}

// Enable incremental compilation
tasks.withType(JavaCompile) {
   options.incremental = true
}

version = "1.80pr0"
group = "dan200.computercraft"
archivesBaseName = "ComputerCraft"

minecraft {
    version = "1.9.4-12.17.0.1959"
    runDir = "run"
    replace '${version}', project.version
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160518"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade project(':luaj')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    configurations.shade.each {
        from(it.isDirectory() ? it : zipTree(it)) { exclude 'META-INF', 'META-INF/**' }
    }
	
	into("api", { from (sourceSets.main.java) {
        include "dan200/computercraft/api/**/*.java"
    }})
}

task countLines {
    group = 'other'
    description = 'Count lines of Java, JSON, and Lua'
    
    doLast {
        println "Java: " + sourceSets.main.allSource.files.findAll {it.name.endsWith ".java"}.sum {(it.text =~ /\n/).count}
        println "JSON: " + sourceSets.main.allSource.files.findAll {it.name.endsWith ".json"}.sum {(it.text =~ /\n/).count}
        
        def lualines = 0
        new File(sourceSets.main.resources.srcDirs[0], 'assets/computercraft/lua')
            .eachFileRecurse(groovy.io.FileType.FILES,{ lualines += (it.text =~ /\n/).count })
        println "Lua: $lualines"
    }
}
